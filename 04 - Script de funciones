-- FUNCIONES
-- Script de funciones

-- Función cantidad anotados y cupos libres en una actividad
DELIMITER \\
CREATE DEFINER=`root`@`localhost` FUNCTION `vacantes_actividad`(actividad INT) RETURNS varchar(255) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
DECLARE anotados INT; 
DECLARE cupos_actividad INT;
DECLARE respuesta VARCHAR(255);
DECLARE nombre VARCHAR(255);

IF actividad <= (SELECT COUNT(id_actividad) FROM actividades) THEN
	SELECT COUNT(id_actividad) INTO anotados FROM inscripciones WHERE id_actividad = actividad;
	SELECT nombre_actividad INTO nombre FROM actividades  WHERE id_actividad = actividad;
	SELECT capacidad_actividad INTO cupos_actividad FROM actividades WHERE id_actividad = actividad;

	SET respuesta = CONCAT(
	'La cantidad de anotados del curso numero ',actividad,' ',nombre,' es: ',anotados,' y los cupos disponibles son ',cupos_actividad);
ELSE
	SET respuesta = CONCAT(
	'La actividad consultada no existe');
END IF;
RETURN respuesta;
END \\

-- Script de prueba función `vacantes_actividad` para actividad que existe
-- SELECT vacantes_actividad(4) AS anotados_y_vacantes_actividad;
-- Script de prueba función `vacantes_actividad` para actividad que no existe
-- SELECT vacantes_actividad(29) AS anotados_y_vacantes_actividad;

-- Función total de pagos y cantidad de pagos a trabajador
DELIMITER \\
CREATE DEFINER=`root`@`localhost` FUNCTION `abonado_trabajador`(id_ingresado INT) RETURNS varchar(255) CHARSET utf8mb4
    DETERMINISTIC
BEGIN 
DECLARE nombre_trabajador VARCHAR(255);
DECLARE apellido_trabajador VARCHAR(255);
DECLARE pagado_trabajador FLOAT;
DECLARE resultado VARCHAR(255);
DECLARE cantidad_pagos INT;

IF id_ingresado <= (SELECT COUNT(id_trabajador) FROM trabajadores) THEN
	IF (SELECT COUNT(id_trabajador) FROM flujo_de_caja WHERE id_trabajador = id_ingresado) != 0 THEN 
		

SELECT nombre INTO nombre_trabajador FROM trabajadores WHERE id_trabajador = id_ingresado;


		SELECT apellido INTO apellido_trabajador FROM trabajadores WHERE id_trabajador = id_ingresado;


		SELECT SUM(monto) INTO pagado_trabajador FROM flujo_de_caja WHERE id_trabajador = id_ingresado;

		SELECT COUNT(monto) INTO cantidad_pagos FROM flujo_de_caja WHERE id_trabajador = id_ingresado;

		SET resultado = CONCAT(
'Pagado al trabajador ',nombre_trabajador ,' ',apellido_trabajador, ': ','Total desembolsado: ', pagado_trabajador, ' // ' ,'Cantidad de pagos: ', cantidad_pagos);
	ELSE 
		SELECT nombre INTO nombre_trabajador
		FROM trabajadores
		WHERE id_trabajador = id_ingresado;

		SELECT apellido INTO apellido_trabajador
		FROM trabajadores
		WHERE id_trabajador = id_ingresado;
		SET resultado = CONCAT(
		'El trabajador ',nombre_trabajador,' ',apellido_trabajador,'no tiene pagos realizados');
	END IF;
ELSE 
		SET resultado = CONCAT(
	'El trabajador cargado no existe');
END IF;
RETURN resultado;
END \\
-- Script de prueba trabajador con pagos realizados
-- SELECT abonado_trabajador(10) AS pagado_trabajador;






-- Función pagar a un trabajador al contado
DELIMITER \\
CREATE DEFINER=`root`@`localhost` FUNCTION `pago_trabajador_contado`(trabajador INT, cuenta INT) RETURNS varchar(255) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
DECLARE saldo_original INT;
DECLARE haber INT;
DECLARE respuesta VARCHAR(255);

IF (trabajador BETWEEN 0 AND (SELECT COUNT(id_trabajador) FROM trabajadores)) AND (cuenta BETWEEN 0 AND (SELECT COUNT(id_cuenta) FROM cuentas_bancarias)) THEN

	SELECT sueldo INTO haber FROM trabajadores WHERE id_trabajador = trabajador;
	SELECT saldo INTO saldo_original FROM cuentas_bancarias WHERE id_cuenta = cuenta;

	INSERT INTO flujo_de_caja(id_cuenta,id_trabajador,monto,tipo,fecha_pago)
	VALUES(cuenta,trabajador,haber,'contado',now());
	-- SELECT * FROM flujo_de_caja;

	UPDATE cuentas_bancarias SET saldo = saldo_original - haber WHERE id_cuenta = cuenta;
	SET respuesta = CONCAT(
	'Se le pagaron los haberes al trabajador ',trabajador,' y se descontó el monto de la cuenta ',cuenta);
ELSE 
	SET respuesta = CONCAT('Cuenta o legajo trabajador mal ingresado');
END IF;
RETURN respuesta;
END \\








-- Función pagar a un trabajador con transferencia
DELIMITER \\
CREATE DEFINER=`root`@`localhost` FUNCTION `pago_trabajador_transferencia`(trabajador INT, cuenta INT) RETURNS varchar(255) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
DECLARE saldo_original INT;
DECLARE haber INT;
DECLARE respuesta VARCHAR(255);

IF (trabajador BETWEEN 0 AND (SELECT COUNT(id_trabajador) FROM trabajadores)) AND (cuenta BETWEEN 0 AND (SELECT COUNT(id_cuenta) FROM cuentas_bancarias)) THEN

	SELECT sueldo INTO haber FROM trabajadores WHERE id_trabajador = trabajador;
	SELECT saldo INTO saldo_original FROM cuentas_bancarias WHERE id_cuenta = cuenta;

	INSERT INTO flujo_de_caja(id_cuenta,id_trabajador,monto,tipo,fecha_pago)
	VALUES(cuenta,trabajador,haber,'transferencia',now());
	-- SELECT * FROM flujo_de_caja;

	UPDATE cuentas_bancarias SET saldo = saldo_original - haber WHERE id_cuenta = cuenta;
	SET respuesta = CONCAT(
	'Se le pagaron los haberes al trabajador ',trabajador,' y se descontó el monto de la cuenta ',cuenta);
ELSE 
	SET respuesta = CONCAT('Cuenta o legajo trabajador mal ingresado');
END IF;
RETURN respuesta;
END \\

